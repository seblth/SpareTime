name: Android CI/CD

on:
  push:
    branches: [ "dev", "main", "feature/**" ]
    tags:     [ "v*.*.*" ]   # tags triggern Release-Job
  pull_request:
    branches: [ "dev", "main" ]
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  checks:
    name: Lint & Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
      - uses: gradle/actions/setup-gradle@v3
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Lint & unit tests (debug)
        run: ./gradlew --no-daemon clean lintDebug testDebugUnitTest
      - name: Upload reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports
          path: |
            **/build/reports/**
            **/build/test-results/**

  build-debug:
    name: Build Debug APK
    needs: checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
      - uses: gradle/actions/setup-gradle@v3
      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew
      - name: Assemble debug
        run: ./gradlew --no-daemon assembleDebug
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/*.apk

  release:
    name: Build Signed Release (AAB) + optional Firebase
    if: startsWith(github.ref, 'refs/tags/v')
    needs: checks
    runs-on: ubuntu-latest
    env:
      VERSION_NAME: ${{ github.ref_name }}   # vX.Y.Z
      VERSION_CODE: ${{ github.run_number }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
      - uses: gradle/actions/setup-gradle@v3

      - name: Restore keystore & props
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > release.keystore
          {
            echo "storeFile=release.keystore"
            echo "storePassword=$ANDROID_KEYSTORE_PASSWORD"
            echo "keyAlias=$ANDROID_KEY_ALIAS"
            echo "keyPassword=$ANDROID_KEY_ALIAS_PASSWORD"
          } > keystore.properties
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_ALIAS_PASSWORD: ${{ secrets.ANDROID_KEY_ALIAS_PASSWORD }}

      - name: Build release bundle (AAB)
        run: |
          ./gradlew --no-daemon \
            -PkeystoreProps=keystore.properties \
            -PVERSION_NAME=$VERSION_NAME \
            -PVERSION_CODE=$VERSION_CODE \
            bundleRelease

      - name: Upload AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: app/build/outputs/bundle/release/*.aab

      - name: Distribute to Firebase App Distribution
        if: ${{ vars.FIREBASE_APP_ID != '' && secrets.FIREBASE_TOKEN != '' }}
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ vars.FIREBASE_APP_ID }}
          token: ${{ secrets.FIREBASE_TOKEN }}
          groups: testers
          releaseNotes: "Build ${{ github.ref_name }} (run ${{ github.run_number }})"
          file: app/build/outputs/bundle/release/*.aab
